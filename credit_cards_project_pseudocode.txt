/*================================================================
 *   Copyright (C) 2018 He Hongyu(Ray). All rights reserved.
 *
 *   FileName   : union_find_naive.cpp
 *   Author    	: He Hongyu (Ray)
 *   Date       : 2018-10-07
 *   Description:The 1st version of pseudo code for group2 project
 *   Email		: hongyu.he@hotmail.com
 *	 GitHub		: https://github.com/HongyuHe
 ================================================================*/

————————————————————————————————————————————————————————————
PROGRAM Check Credit Card
————————————————————————————————————————————————————————————
Input:  card_number: a sequence of cedit card numbers
Output: validity: if the credit card number is valid
		card_typy: the type of the credit card if its valid

len <- length(card_number) - 1
while len < 13 or len > 16
	do validity <- invalidate
	   ask user to input card number again
end while

if LunnCheck (card_number, len) = true then
	validity <- validate
	card_typy = CheckCardType (card_number)
else
	validity <- invalidate

------------------------------------------------------------
bool Function LunnCheck (card_number)
Input:  card_number
Output: if it's a valid credit card number

	sum <- 0
	parity <- len mod 2
	for i from 0 to len - 2 do
		digit <- card_number[i]
		if i mod 2 = parity then
			digit <- digit * 2
		if digit > 9 then
		 	digit <- digit / 10 + digit mod 10
		sum <- sum + digit

	return (sum mod 10) = 0
------------------------------------------------------------
card_typy Function CheckCardType (card_number)
Input:  card_number
Output: card_typy

	if card_number starts with 4 then
		return Visa card
	else if card_number starts with 5 then
		return Master card
	else if card_number starts with 37 then
		return American Express card
	else if card_number starts with 6 then
		return Discover card
	else
		return unknown type
